/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 18:29:02 GMT 2024
 */

package benchmarks.ran.bnldev.Eq;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import benchmarks.ran.bnldev.Eq.oldV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class oldV_ESTest extends oldV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = oldV.ran1((-1.0));
      assertEquals(0.41599935685098144, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double double0 = oldV.snippet(2310.360819412, 4635, 0, 1905);
      assertEquals(4635.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double double0 = oldV.snippet(0.0, 25, 813, 813);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double double0 = oldV.snippet(0.5, (-903), (-903), 16807);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double double0 = oldV.snippet(Double.POSITIVE_INFINITY, (-1785), (-2792), 217);
      assertEquals((-1785.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = oldV.ran1(Double.NaN);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = oldV.gammln(1.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double double0 = oldV.gammln(0.0);
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = oldV.gammln(1.000000000190015);
      assertEquals((-1.0968070895955861E-10), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = oldV.ran1((-1340.9507114843));
      assertEquals(0.16081156542562486, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      oldV.snippet(0.41599935685098144, 2043, 127773, 0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = oldV.snippet(0.41599935685098144, 2078, 530511967, 530511967);
      assertEquals(982.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      oldV.snippet(0.41599935685098144, 32, (-1916), 569);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = oldV.snippet(0.5673288086277101, 5, 5, (-3439));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = oldV.snippet(0.0, 1, 2078, 1);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = oldV.snippet(Double.NaN, 4635, 1343, 4635);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      oldV oldV0 = new oldV();
  }
}
