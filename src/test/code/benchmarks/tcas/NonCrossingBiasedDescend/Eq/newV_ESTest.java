/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 20:18:46 GMT 2024
 */

package benchmarks.tcas.NonCrossingBiasedDescend.Eq;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import benchmarks.tcas.NonCrossingBiasedDescend.Eq.newV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class newV_ESTest extends newV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = newV.Own_Below_Threat(0, 0, (-781), (-781), (-781), (-781), 0, 500, 500, (-1132), (-781), 0, 100, 100);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double double0 = newV.snippet(0, 0, 0, 353, 0, 0, 0, 0, 323, 353, 353, 1249, 1249, 1011);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = newV.Inhibit_Biased_Climb(239, 239, 239, 239, 239, 2895, 239, 2895, 2895, 2895, 239, 0, 2895, 2895);
      assertEquals(2895, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = newV.ALIM(3, 0, 3, 0, 0, 3, (-1), (-1), 3, 0, (-1), 0, 0, (-3029));
      assertEquals(400, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = newV.Inhibit_Biased_Climb((-2307), (-2307), 0, (-2307), 0, 0, 0, (-1342), (-1342), (-2307), 0, (-1342), (-1342), 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = newV.Inhibit_Biased_Climb(1, 1, 1, 1819, (-856), 1, 1819, (-856), (-1), (-1848), 0, (-1848), (-1848), (-856));
      assertEquals((-556), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = newV.Own_Above_Threat((-421), (-421), (-421), 740, (-421), 1, 848, 0, (-421), 0, 0, 740, (-3016), (-1237));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = newV.Own_Above_Threat(450, 450, 600, 0, 4, 0, 0, 0, 0, 0, 1576, 0, 600, 450);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = newV.Own_Below_Threat(1, (-1), 1, 0, 0, 4, 2673, 0, 4, 2673, 0, 4, (-2959), (-1));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = newV.Own_Below_Threat((-173), (-3983), (-3983), (-173), (-3983), (-173), (-3983), (-3983), (-3983), (-3983), (-1), (-2135), (-3983), (-1));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        newV.ALIM(0, (-1), 0, 500, 323, 928, 1011, 0, 908, 0, (-1378), (-1), (-2961), (-1378));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("benchmarks.tcas.NonCrossingBiasedDescend.Eq.newV", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = newV.snippet(0, 0, 0, 437, 0, 0, 0, 0, 0, 437, 437, 437, 437, 437);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = newV.snippet(3, 3, 3, 396, 3, 396, 396, 3, 396, 396, 396, 396, 396, 396);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = newV.snippet(1206, 1206, 1206, 1206, 1206, 3, 1206, 1206, 1206, 3, 3, 3, 3, 3);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = newV.snippet(3, 3, 396, 3, 3, 3, 3, 396, 3, 938, 1037, 3, 938, 1037);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = newV.snippet(3, 3, 1206, 3, 3, 1206, 1206, 3, 1206, 1206, 1206, 3, 3, 1206);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double double0 = newV.snippet(1, 1, 1, (-170), 1, (-170), 1, 1, 1, (-170), 1, (-170), 1, (-170));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        newV.snippet(500, (-2663), 2973, 1, 1, 3091, (-2919), 1, (-3683), (-247), 300, (-5), (-2663), (-2004));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2663
         //
         verifyException("benchmarks.tcas.NonCrossingBiasedDescend.Eq.newV", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double double0 = newV.snippet(500, (-2996), (-2004), 500, 1870, (-2919), 1870, (-47), (-1390), (-2919), 500, (-247), (-47), 4);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      newV newV0 = new newV();
  }
}
