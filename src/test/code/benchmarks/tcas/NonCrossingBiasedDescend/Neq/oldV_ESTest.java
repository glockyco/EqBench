/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 20:19:52 GMT 2024
 */

package benchmarks.tcas.NonCrossingBiasedDescend.Neq;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import benchmarks.tcas.NonCrossingBiasedDescend.Neq.oldV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class oldV_ESTest extends oldV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = oldV.snippet(1067, 801, 1067, 801, 1067, 2226, 1067, 1067, 1067, 342, 1, 1015, 1067, (-3328));
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        oldV.snippet((-366), (-2761), 0, (-2976), 151, (-4537), (-1307), 119, 1, 0, 300, 4, 1, 2480);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2761
         //
         verifyException("benchmarks.tcas.NonCrossingBiasedDescend.Neq.oldV", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = oldV.Inhibit_Biased_Climb((-2487), (-2487), 0, 0, 0, (-2487), 0, (-2487), 0, 0, 0, (-2487), 3, (-2487));
      assertEquals((-2487), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = oldV.ALIM(0, 0, (-459), 1813, 2052, 3214, 2052, 1813, 2779, (-459), 0, (-390), (-1367), 0);
      assertEquals(400, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        oldV.snippet(4401, (-3018), 0, 1815, 145, (-409), 1199, 2654, 723, 0, 746, 177, 0, (-4106));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3018
         //
         verifyException("benchmarks.tcas.NonCrossingBiasedDescend.Neq.oldV", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = oldV.Inhibit_Biased_Climb(1, 0, 1, (-1300), 0, 0, 0, 1, 1, (-1300), 0, 1, 0, 662);
      assertEquals(962, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = oldV.Inhibit_Biased_Climb(0, 1, 0, 1, 177, 0, 0, 4401, 177, 2654, (-1), 375, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = oldV.Own_Above_Threat((-2625), (-2625), 2249, 2249, (-2625), 328, 2249, 1, 2249, (-1), 1, (-2625), 328, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = oldV.Own_Above_Threat(891, (-4106), (-4106), 1, (-621), (-4106), (-4106), 0, 843, (-4106), 0, 843, (-4106), 891);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = oldV.Own_Below_Threat(740, 746, 1, 1, 177, (-1), 0, 0, 0, 746, 0, 100, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = oldV.Own_Below_Threat(0, 0, 0, (-2199), 0, 662, 0, 662, 0, 0, 1, 1, (-2199), 267);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        oldV.ALIM((-3328), 801, 3, 577, 1, 331, (-1372), 1067, 1067, 1067, 1067, (-4180), (-16), 1848);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 801
         //
         verifyException("benchmarks.tcas.NonCrossingBiasedDescend.Neq.oldV", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = oldV.snippet((-393), 0, (-393), 0, 2340, 2340, 0, (-393), 0, 2340, (-393), 2340, 2340, 0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = oldV.snippet(1012, 1012, 1012, 1012, 1012, 1, 1012, 1, 1012, 1012, 1, 1012, 1012, 1012);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = oldV.snippet(0, 0, 1109, 832, 0, 832, 1109, 0, 1109, 0, 1109, 1109, 0, 832);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = oldV.snippet(832, 832, 0, (-48), 1109, 0, (-48), 832, 832, 832, 0, 0, 832, 1109);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double double0 = oldV.snippet((-399), 0, (-2199), 0, 0, 0, 1, 0, 888, 0, 191, 0, (-1589), 0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double double0 = oldV.snippet(2021, 2, 2021, 2065, (-1300), 392, 2, 500, (-2942), 991, 1104, 267, 2919, 1024);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      oldV oldV0 = new oldV();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double double0 = oldV.snippet(1, 1, 1067, 801, 1, 801, 1067, 1067, 1067, 1, 1067, 1067, 1067, 801);
      assertEquals(1.0, double0, 0.01);
  }
}
