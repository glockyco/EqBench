/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 20:15:27 GMT 2024
 */

package benchmarks.tcas.NonCrossingBiasedClimb.Neq;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import benchmarks.tcas.NonCrossingBiasedClimb.Neq.oldV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class oldV_ESTest extends oldV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = oldV.Own_Below_Threat(1, 1684, 1684, 1684, 1, 1, 1684, 1, 1684, 1684, 1684, 1, 1, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = oldV.Inhibit_Biased_Climb(0, 0, 0, 0, 0, 0, 1195, 0, 0, 1195, 4568, 0, (-2433), 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = oldV.Inhibit_Biased_Climb(0, 100, 100, 100, 100, 2483, 2483, 2483, 736, 736, 779, 736, 779, 736);
      assertEquals(736, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = oldV.ALIM(0, 0, 0, 0, 0, 0, 0, 0, (-855), 0, 0, 0, 0, (-1231));
      assertEquals(400, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        oldV.snippet(0, (-1045), (-311), 0, (-394), 0, (-311), (-2939), (-394), 726, 500, 0, 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1045
         //
         verifyException("benchmarks.tcas.NonCrossingBiasedClimb.Neq.oldV", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = oldV.Inhibit_Biased_Climb(0, (-1858), (-2439), 0, (-1858), (-1311), 2, 1, 2667, 2667, 0, (-3786), (-1858), (-3786));
      assertEquals((-3786), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = oldV.Inhibit_Biased_Climb(1, 2724, 1442, 1442, 1442, 1442, 0, 1442, 0, 1, (-1), 0, 2724, (-381));
      assertEquals((-81), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = oldV.Own_Above_Threat((-3786), (-3786), (-3786), (-2439), (-2439), (-2439), (-2439), (-3786), (-2439), (-1858), (-2439), (-3786), (-1858), 303);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = oldV.Own_Above_Threat((-2502), 2564, 0, 0, 0, 0, 0, (-2727), 1, 1370, 0, 0, 2564, 2564);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = oldV.Own_Below_Threat(1092, 1092, 1092, (-3627), 1092, (-3627), 0, 1092, (-3627), 0, 1092, 1092, (-528), (-3627));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = oldV.Own_Below_Threat(0, 0, 0, 352, 0, 0, 1672, 0, 0, 0, (-4863), 1370, 0, 1672);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        oldV.ALIM(3300, 3300, 0, 3300, 0, (-906), 0, (-1), 0, 674, (-331), 400, 0, 259);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3300
         //
         verifyException("benchmarks.tcas.NonCrossingBiasedClimb.Neq.oldV", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = oldV.snippet((-1936), 0, 383, 697, 300, 1096, 470, 4136, 2584, (-860), 1616, 1259, 1408, 500);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = oldV.snippet(1, 828, 2197, 3303, 500, 828, 1263, 1670, 1408, (-1962), 1, (-1192), 2197, 0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = oldV.snippet(834, 0, 4103, 0, 0, 0, 4103, 834, 4103, 4103, 0, 0, 0, 0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = oldV.snippet(0, 0, 834, 0, 0, 0, 0, 834, 0, 0, 0, 0, 834, 4103);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double double0 = oldV.snippet(1, 0, (-1), 1670, 686, 686, 1, 0, 4136, 1, 1, 4136, 0, (-1));
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double double0 = oldV.snippet(0, 1, 352, 1, 0, 1, 0, (-2502), (-4167), (-4863), 1, (-1075), 1, 352);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double double0 = oldV.snippet(303, 0, (-1311), 2667, 2381, 1320, 2381, 0, (-1), (-3786), 400, (-3786), 1320, (-1));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      oldV oldV0 = new oldV();
  }
}
