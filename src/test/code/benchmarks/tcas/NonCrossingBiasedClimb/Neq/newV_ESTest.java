/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 20:16:34 GMT 2024
 */

package benchmarks.tcas.NonCrossingBiasedClimb.Neq;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import benchmarks.tcas.NonCrossingBiasedClimb.Neq.newV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class newV_ESTest extends newV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = newV.Own_Below_Threat((-4224), 1, (-4224), 1, 1, 100, 100, 1, 100, 0, 100, (-2159), (-1177), (-2159));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = newV.Inhibit_Biased_Climb(0, (-1331), (-1331), (-1331), 0, 4122, 4122, (-1331), 0, (-1331), 4122, 300, 4122, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = newV.Inhibit_Biased_Climb((-1098), 0, (-743), 1917, (-1098), 4, 1049, 1, 100, 640, 0, 3406, (-1543), 600);
      assertEquals(600, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = newV.ALIM((-3735), 2, 1, (-3735), 2, 1917, 1045, (-743), (-1503), 640, (-3735), 1119, 2, (-466));
      assertEquals(640, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = newV.Inhibit_Biased_Climb(1, 1, 1, 1, (-502), 0, 0, 0, (-502), 0, 0, 1, (-758), (-437));
      assertEquals((-137), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = newV.Own_Above_Threat(5, 5, (-1980), 5, 5, (-1980), (-1980), 5, (-1980), 5, 5, (-1980), (-1980), 5);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = newV.Own_Above_Threat(0, 0, 0, 0, (-223), (-223), (-223), (-223), 0, 0, 1341, 0, 1341, 3790);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = newV.Own_Below_Threat((-50), (-7), (-7), (-305), (-7), (-305), (-305), (-7), (-305), (-305), (-7), (-7), (-50), (-7));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = newV.Own_Below_Threat(500, 500, 500, 500, 500, 500, 500, 500, (-13), 6148, 6148, (-1577), 0, 6148);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = newV.snippet((-1980), 1, (-1980), 5, (-1980), (-1980), 5, (-1980), (-1980), 1, 375, (-1980), 5, (-1980));
      assertEquals(2.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = newV.snippet(0, 0, 0, 5806, 0, 5806, 0, 0, 0, 0, 0, 0, 0, 0);
      assertEquals(2.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = newV.snippet((-7), (-50), 1, (-50), (-7), (-7), (-50), (-7), (-7), (-305), (-7), (-7), (-7), (-7));
      assertEquals(2.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = newV.snippet((-50), 1, (-7), (-50), (-50), (-305), (-50), (-50), (-50), (-7), (-7), 1, (-305), (-50));
      assertEquals(3.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = newV.snippet(1, 0, 1, 0, 5806, 0, 0, 5806, 1, 0, 0, 5806, 5806, 5806);
      assertEquals(2.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        newV.snippet(1, (-3212), 0, (-636), (-1999), 0, 0, (-1573), 0, 0, (-700), (-1), (-322), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3212
         //
         verifyException("benchmarks.tcas.NonCrossingBiasedClimb.Neq.newV", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = newV.snippet((-1980), (-1980), (-1980), (-1980), (-1980), (-1980), (-1980), 5, (-1980), (-1980), (-1980), (-1980), (-1980), 5);
      assertEquals(3.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double double0 = newV.snippet(500, 0, (-4474), 1049, 1049, 2, 4, (-466), (-2072), 600, 600, (-1080), 640, 600);
      assertEquals(3.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      newV newV0 = new newV();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        newV.ALIM(136, (-1756), (-13), 0, 0, (-1951), 1, 0, 214, 6148, (-1520), (-1577), 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1756
         //
         verifyException("benchmarks.tcas.NonCrossingBiasedClimb.Neq.newV", e);
      }
  }
}
