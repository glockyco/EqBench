/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 20:26:44 GMT 2024
 */

package benchmarks.tcas.tcas.Eq;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import benchmarks.tcas.tcas.Eq.oldV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class oldV_ESTest extends oldV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        oldV.Non_Crossing_Biased_Descend((-2274), (-1271), 1283, (-2396), 0, 0, (-1231), 1932, 124, 1932, 300, 3202, 1932, 3202);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1271
         //
         verifyException("benchmarks.tcas.tcas.Eq.oldV", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(876, 876, 876, 876, 500, 876, 500, 876, 876, 1564, 1564, 1, 876, 1564);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = oldV.altseptest(600, (-216), (-216), (-3362), 600, 1, 600, 0, 1, 0, 600, (-1022), 1, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = oldV.Inhibit_Biased_Climb(3907, 400, 0, 0, 0, 0, 400, 0, (-1918), 401, 1, 401, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = oldV.Inhibit_Biased_Climb(0, (-93), 0, 1020, 261, (-1517), (-1517), 4, 4, 832, 4, (-1517), 0, (-778));
      assertEquals((-778), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        oldV.altseptest(600, (-216), (-216), 600, 1, 1, 2271, 0, 1, 0, 2271, 1, 1, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -216
         //
         verifyException("benchmarks.tcas.tcas.Eq.oldV", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        oldV.Non_Crossing_Biased_Descend(1, (-1), 500, (-400), 640, (-1), 0, 388, 0, (-1247), 485, 1, 500, 388);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("benchmarks.tcas.tcas.Eq.oldV", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        oldV.ALIM(0, 500, 500, 1, (-2108), 0, (-1), 2518, (-1), 100, (-2108), (-1), 0, 1397);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 500
         //
         verifyException("benchmarks.tcas.tcas.Eq.oldV", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = oldV.Inhibit_Biased_Climb(1, 0, 1, 0, 0, (-1), 0, 0, (-197), 0, (-197), (-132), 1, (-207));
      assertEquals(93, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = oldV.Own_Above_Threat(0, 100, 1, (-780), 3, (-1064), 3, (-780), (-1064), 0, 3, 0, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = oldV.Own_Above_Threat(0, (-806), 0, 1, 391, (-404), 500, (-1493), 985, 391, 2015, 1, (-1), (-3275));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(0, 1073, 0, (-1253), (-1), 3017, (-414), (-1663), (-319), 71, (-1663), 1761, 2279, 194);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(0, 1, 226, 1, 226, 0, 0, 450, 226, 1, 450, 500, (-169), (-1));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(124, 600, 124, 600, 0, 124, 0, 0, 600, 0, 0, 0, 124, 306);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = oldV.Own_Below_Threat(1, (-489), (-1), 1053, 0, 1, 1, (-1133), (-1378), 1335, (-110), 573, (-489), 2279);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = oldV.Own_Below_Threat((-143), 940, 940, (-143), (-785), (-785), 940, 0, (-785), 0, (-785), 940, (-143), (-1064));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb(0, 0, 1, 0, (-1648), 600, 600, 2271, 0, (-1648), (-1274), 0, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb((-1), 0, 4, 0, (-1218), 0, 0, (-1218), 323, 0, 2453, (-1578), (-1), 2453);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb(0, 0, 0, 286, 0, 0, 0, (-2861), (-3175), (-3175), 180, 286, 0, 180);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = oldV.ALIM(0, 0, 1, 0, 0, (-1), 615, 1976, 729, (-658), 0, (-1), (-1), 600);
      assertEquals(400, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(0, 0, 0, 1909, 1, 747, 747, 676, 1, 0, 1, 1, 1909, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(2437, 1, (-1), 2483, 0, (-1), 1, 2437, 2437, (-1), 2437, 886, 3135, 1221);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(249, 1, 1564, 279, 876, (-2100), 1564, 0, (-2100), 0, 876, 500, 1258, 1564);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(1, 0, 1, 0, 1, 1, 0, 1, 747, 0, 1, 1909, 747, 676);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb(0, 0, 1, 1564, (-1227), 1564, 0, 1564, 1564, 1, 500, 500, 876, 876);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb(0, 0, (-761), 1897, 0, 0, 0, (-761), (-1718), 600, 629, 0, 0, (-761));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb(740, 1, 458, 2039, 458, 1, 1, 0, 458, 458, 0, 1, 1, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb(1332, 0, 0, (-4404), (-1), (-933), 3690, 4999, (-933), 1641, (-4404), 4999, 500, 5287);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = oldV.altseptest((-781), 2039, 740, 2039, 0, 2039, 740, 2039, 1, 0, 740, (-781), 0, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = oldV.altseptest((-1582), 1, 740, 1, 0, 1, 740, 1, 1, 0, 740, (-1582), 0, 2902);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = oldV.altseptest(600, 600, 600, 600, 1, 1, 2271, 0, 1, 600, 2271, 1, 1, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = oldV.altseptest(0, 1, 0, 1, (-59), 2499, 103, 1, 1, 0, 0, 1, 0, 103);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = oldV.altseptest(1, 1, (-2405), 1086, 1, 1, 0, 1, 1, 2499, 0, 0, 1, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = oldV.altseptest(600, (-216), (-216), 600, 0, 1, 2271, 0, 1, 0, 2271, 1, 1, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = oldV.altseptest(747, 747, 747, 1, 747, 747, 747, 747, 747, 747, 1, 747, 1909, 1909);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      oldV oldV0 = new oldV();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        oldV.Non_Crossing_Biased_Climb((-1510), (-1510), (-1510), 0, (-1510), (-1), (-1139), 407, 1482, (-1510), 2094, (-24), 0, (-1510));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1510
         //
         verifyException("benchmarks.tcas.tcas.Eq.oldV", e);
      }
  }
}
