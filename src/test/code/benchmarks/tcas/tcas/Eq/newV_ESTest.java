/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 20:27:54 GMT 2024
 */

package benchmarks.tcas.tcas.Eq;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import benchmarks.tcas.tcas.Eq.newV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class newV_ESTest extends newV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        newV.Non_Crossing_Biased_Descend(974, (-3056), 1109, 740, 740, 1109, (-601), 1109, (-481), (-4261), 300, 2145, (-2602), 556);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3056
         //
         verifyException("benchmarks.tcas.tcas.Eq.newV", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = newV.Own_Below_Threat((-453), 0, 0, 0, 1741, (-566), 68, 68, 0, (-2216), 0, 1, (-1562), 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = newV.altseptest((-1237), 331, 0, (-764), (-1616), (-1237), 1, 0, 1, 0, 0, (-1616), 0, (-1237));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = newV.Inhibit_Biased_Climb(600, 600, 600, (-2988), 600, 600, (-2988), 0, 600, (-2988), (-986), (-2988), (-1), 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = newV.ALIM(4, 0, 0, 0, 1716, 0, 0, 1509, 1716, 0, 1716, 0, 0, 1);
      assertEquals(400, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        newV.altseptest(0, (-1), 1, 1330, 325, (-512), 195, (-994), 1, 0, 1330, 3124, (-507), (-1585));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("benchmarks.tcas.tcas.Eq.newV", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        newV.Non_Crossing_Biased_Descend(1, 1085, 1085, 1, 1085, 1, 995, 995, (-1848), 2457, 1085, (-1099), 1085, 1085);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1085
         //
         verifyException("benchmarks.tcas.tcas.Eq.newV", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        newV.Non_Crossing_Biased_Climb((-1307), (-1), 5498, (-1083), 0, 1574, 0, 0, (-1307), 5498, (-1368), 0, 0, 435);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("benchmarks.tcas.tcas.Eq.newV", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = newV.Inhibit_Biased_Climb(1, 0, 0, 0, 0, (-842), (-1), 0, 0, 9, (-842), (-842), 0, 0);
      assertEquals(300, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = newV.Inhibit_Biased_Climb((-1), 1574, (-279), 640, 400, (-1083), 100, (-1673), (-279), (-1673), 0, 640, 72, (-1083));
      assertEquals((-1083), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = newV.Own_Above_Threat(0, (-1700), 0, 0, (-358), 0, 0, (-1598), (-968), (-599), (-1598), 0, (-599), 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = newV.Own_Above_Threat(3317, (-1162), (-1162), 1741, 3317, 99, 0, 1741, 3317, 3317, 1650, 3317, 0, 99);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Descend((-2489), 0, 0, 101, 0, (-1280), 0, (-547), (-1280), 0, 0, 974, 1509, 4);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Descend(0, 0, 1, 0, 1650, (-2779), 0, (-453), (-580), 328, 0, 0, 400, 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Descend(1650, (-1562), (-5), 1, 1650, 0, 0, 0, 3317, 1, (-1162), 1650, 1, 1650);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Descend(0, 0, 0, (-1), (-1), (-1972), 0, 782, 0, 0, 782, (-1), 1, 3735);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = newV.Own_Below_Threat((-453), 0, 328, 0, (-580), (-566), 328, 328, 0, (-2216), 0, 1, (-1562), 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      boolean boolean0 = newV.checkCon3((-682), 0, 1, (-1095), 382, (-682), 384, 301, 1, 1160, 1069, (-682), (-3817), (-1349), 500);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      boolean boolean0 = newV.checkCon3(1694, 1694, 1694, (-1083), (-1083), (-1083), (-279), (-1083), 72, (-1368), (-1083), 1694, 435, 740, (-1147));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      boolean boolean0 = newV.checkCon3((-1184), 0, 0, 0, 1697, (-3936), (-471), 0, 0, (-1184), 4, (-1184), 0, 0, 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Climb(0, 0, 303, (-1138), (-1), 303, 3, 681, 681, (-1), 191, 303, 0, (-248));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Climb((-2013), (-2013), (-2013), 1580, (-2013), 191, (-1419), 191, (-2013), 400, (-2013), 191, 1, 191);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Climb(0, 0, (-970), (-1009), (-1009), (-1009), (-13), (-1818), (-1818), (-970), (-13), (-1818), (-763), 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      boolean boolean0 = newV.checkCond2(1, 3);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      boolean boolean0 = newV.checkCond2((-1147), 435);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      boolean boolean0 = newV.checkCond1(911, 911, (-1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      boolean boolean0 = newV.checkCond1(1, 1, 1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      boolean boolean0 = newV.checkCond1(1, 0, 1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      // Undeclared exception!
      try { 
        newV.ALIM((-999), (-458), 1, 1738, 1, 365, (-1), (-2481), (-2481), (-1021), 1, (-2691), (-2187), (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -458
         //
         verifyException("benchmarks.tcas.tcas.Eq.newV", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Descend(0, 0, 1, 2, (-1247), 4898, (-1247), 1, 1, 4898, 1, (-461), 3108, 3108);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Descend(1650, 0, 3329, (-1162), 1650, (-453), 1741, 1650, 328, 1741, 328, 0, 1253, 1650);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Descend(911, 0, 911, 2, 2, 0, (-69), (-1), 2, 0, 195, 1330, (-1021), 640);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = newV.altseptest(0, 0, 1, 1330, 325, (-512), 195, 0, 1, 0, 1330, 3124, (-507), (-1585));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      boolean boolean0 = newV.checkCon3(1129, 1129, 1129, 0, 1129, 0, 1129, 0, 3293, (-1), 1129, (-1), 0, 0, 3293);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Climb((-1768), 1, (-1768), 2944, 2944, 2944, 1, 2944, 2944, 2944, 2944, 2944, 2092, 2092);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Climb(927, 1, 2, 0, (-2421), 0, 740, 938, 1, (-1), 4651, (-976), 661, 1952);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      boolean boolean0 = newV.checkCond2(1, 1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      int int0 = newV.altseptest(1, 1, 289, 601, 1, 1, 0, 1, 1, 0, 601, (-5678), 1, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int int0 = newV.altseptest(0, 0, (-2), (-967), 3, 1633, 1521, (-3941), 1, 1, 3317, 0, 328, 26);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = newV.altseptest(1, 1, 1, 1253, 1, 1, 0, 0, (-453), 198, (-453), 1253, 1650, (-5025));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      int int0 = newV.altseptest((-865), (-1), 1, 100, 1570, 500, 1576, (-819), 1, 26, 1201, 1, 2369, (-793));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = newV.altseptest(1, 1, 289, 600, (-1), 1, 0, 3329, 1, 0, 600, (-5678), 1, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = newV.altseptest(100, (-2396), 4, 5, (-1735), (-1735), 100, 5, 1, 613, 3, 3, (-1735), 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      int int0 = newV.altseptest(0, 0, 0, (-601), 26, 1633, 1521, 0, 1, 0, 3329, (-453), 1, 26);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      newV newV0 = new newV();
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      // Undeclared exception!
      try { 
        newV.checkCon3((-1138), (-1), (-1), (-1), 740, (-1138), (-1138), 3, (-5714), 0, 0, (-1118), 3337, 0, 3337);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("benchmarks.tcas.tcas.Eq.newV", e);
      }
  }
}
