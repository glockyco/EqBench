/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 20:29:02 GMT 2024
 */

package benchmarks.tcas.tcas.Neq;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import benchmarks.tcas.tcas.Neq.oldV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class oldV_ESTest extends oldV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend((-3574), 0, 5415, 2280, 0, 0, 0, 5415, 5415, 0, 300, 2280, 640, 5415);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(0, 500, 544, 1, 0, 1, (-2508), 1, 2081, 0, (-1769), (-1769), 0, 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = oldV.altseptest(1, 1174, 1, 2020, 0, 998, 1174, 0, 1, 176, 600, 400, 1, 640);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = oldV.Inhibit_Biased_Climb((-2828), (-2828), 507, (-2828), (-2828), (-2828), 507, (-2828), (-2828), (-2828), (-2828), (-2828), (-2828), 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = oldV.Inhibit_Biased_Climb(0, 0, 0, 0, 0, 2610, 2610, (-971), 0, (-1), (-1), 4413, (-3847), (-2449));
      assertEquals((-2449), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = oldV.ALIM((-1), 2, 0, 0, (-18), (-932), 0, 5415, 1040, 1, 766, 403, 2, 3106);
      assertEquals(640, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        oldV.altseptest(1, 600, (-1), 3386, 1174, 1174, 0, (-142), 1, 67, 1174, 0, (-5), (-340));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 600
         //
         verifyException("benchmarks.tcas.tcas.Neq.oldV", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        oldV.Non_Crossing_Biased_Descend(2679, 2679, 3, (-750), 1, (-2401), 2679, 0, 0, 2679, 500, (-2401), 0, 2960);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2679
         //
         verifyException("benchmarks.tcas.tcas.Neq.oldV", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = oldV.Inhibit_Biased_Climb((-2166), (-2166), 4367, 2, 2, (-2166), 2, 1416, (-1), 1416, 1416, 2, 2, 2);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = oldV.Inhibit_Biased_Climb(1, 1, 2028, 2028, 1, 492, 644, 492, 488, 5355, 2028, 2935, (-2141), 5355);
      assertEquals(5655, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = oldV.Own_Above_Threat((-1002), 0, (-1064), 507, (-1002), 507, (-567), 311, 0, 0, 1, (-567), (-54), (-1064));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = oldV.Own_Above_Threat(2566, 0, 300, 0, 67, 300, 67, 3382, 0, 0, (-987), (-1360), 8, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(1, (-2922), (-702), (-2922), (-2922), (-2922), (-702), (-702), (-2922), (-3374), (-1806), (-3441), 0, (-702));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend((-1097), 1, 517, (-2507), 483, (-1075), 400, (-3738), (-2507), (-3738), 517, (-2075), (-3738), 3);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend((-1075), (-2507), (-1), 483, 681, 1575, (-2075), 517, 940, (-3037), 1, (-1345), (-3738), (-1075));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = oldV.Own_Below_Threat(2280, 0, 0, 0, 0, 2280, 2, 0, 5415, 2, 0, 0, 5415, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = oldV.Own_Below_Threat((-257), (-1346), 500, 0, 0, 0, 1447, 0, 0, 1, (-1), 4, 0, 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb(67, (-1360), 3053, 1, (-5), 0, 100, (-5), 2566, 3053, 300, 1, 100, (-702));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb((-2507), 0, 0, (-2507), 0, (-2507), 0, 0, 0, (-1075), 0, (-3738), (-1075), 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb((-2), (-2), (-2), (-2), (-2), (-2), (-2), (-2), (-2), (-2), 2368, (-2), (-2), 2368);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        oldV.ALIM(1, 2816, (-329), 2816, (-329), 2816, 1408, 1, 2816, (-329), 1, 2816, 4, (-329));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2816
         //
         verifyException("benchmarks.tcas.tcas.Neq.oldV", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(1, 1, 0, 232, 0, 176, 1005, 232, 1005, 0, 1174, 0, 1174, 500);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(0, 0, (-2219), 0, 0, 30, (-756), (-1201), (-1201), 483, 0, 30, (-4), (-756));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(1, (-2217), 45, (-1), 1, 400, 612, (-2217), 612, (-2217), (-1936), (-2217), (-1), (-1));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb(0, 0, 0, 3978, 0, 0, 3978, (-1172), 462, (-2166), 462, (-2166), 3171, 462);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb((-3460), 740, (-1766), 1971, 0, (-1498), (-3460), 1971, 0, 1038, 185, 1, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb(0, 0, (-3460), 0, 0, 5625, (-3460), 5625, (-3460), (-3460), 600, 1, 600, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb(0, 0, 1, 0, (-2217), 1, 4, (-2217), (-238), 1, (-2147), 0, 428, 751);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = oldV.altseptest(1408, 0, 1, 1, 1408, (-756), 1, 2816, 1, 0, 1408, 0, 443, 4);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = oldV.altseptest(740, 740, 1, 740, 500, 740, 0, 0, 1, 1, 1007, 1, (-2457), (-670));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = oldV.altseptest(1, 1, 1, 1, 1, 4, 1, 1, 1, 600, 2816, (-238), 1, 4);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = oldV.altseptest(740, 740, 1, 740, 1, 740, 0, 0, 1, 1, 1007, 1, (-2457), (-670));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = oldV.altseptest(740, 740, 740, 740, 740, (-756), 2738, 740, 1, (-756), (-756), 740, 740, (-756));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = oldV.altseptest((-329), 1, 1, (-329), (-329), 4, (-329), (-329), 1, 600, 2816, 4, (-329), 4);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = oldV.altseptest(740, (-142), 740, 3382, 3382, 3382, 2738, 3382, 1, 3382, 3382, 740, 740, 3382);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = oldV.altseptest(400, (-1), 1971, 600, (-1766), 400, (-885), 1, 1113, 5625, 600, (-1732), 1113, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        oldV.Non_Crossing_Biased_Climb(1416, 4367, 2, 1, 2, 1, (-1), (-1), 2, (-1523), 0, 0, (-1714), (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4367
         //
         verifyException("benchmarks.tcas.tcas.Neq.oldV", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      oldV oldV0 = new oldV();
  }
}
