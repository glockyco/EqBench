/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 20:25:35 GMT 2024
 */

package benchmarks.tcas.altseptest.Neq;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import benchmarks.tcas.altseptest.Neq.newV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class newV_ESTest extends newV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      // Undeclared exception!
      try { 
        newV.Non_Crossing_Biased_Descend((-1), 1216, 1216, 300, (-1), 488, 300, (-1), 1216, (-1811), 300, (-2136), 300, 1344);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1216
         //
         verifyException("benchmarks.tcas.altseptest.Neq.newV", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = newV.snippet((-3411), (-690), 0, (-3411), 0, (-2891), 299, 537, 3, 500, 600, (-2111), 100, (-1));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = newV.snippet((-1373), (-1373), (-1373), (-1373), (-1373), (-1373), 0, (-1373), 2470, 600, 1, 0, (-395), 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = newV.Inhibit_Biased_Climb(0, 0, 1071, (-463), 1908, (-2009), (-463), (-2009), 1071, 0, (-463), 0, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = newV.Inhibit_Biased_Climb(0, 0, 0, 1, 0, 0, 300, (-250), 4349, 300, 1, 0, 0, (-343));
      assertEquals((-343), int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = newV.ALIM(0, 0, 0, 500, 500, 0, 640, (-437), 0, (-197), 0, 289, 640, 2008);
      assertEquals(400, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = newV.Inhibit_Biased_Climb((-1109), 3623, (-1109), (-1109), (-1205), (-1205), (-1205), 0, (-1109), 0, 676, 0, 3623, 2280);
      assertEquals(2280, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = newV.Inhibit_Biased_Climb(1, 1, 1, 1323, (-1935), 1, 0, 3413, 0, 0, 2339, 0, 5967, 2339);
      assertEquals(2639, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = newV.Own_Above_Threat((-2522), 1337, (-2522), 600, 1726, 1, 600, 3430, 1337, 3430, (-1), 600, (-2522), (-1709));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = newV.Own_Above_Threat(0, (-2111), 871, (-4073), (-312), 100, 1, 0, (-1336), (-1), 0, (-3411), 3186, (-125));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Descend(0, 0, (-1723), 513, 0, (-1524), (-1723), (-1723), 0, 0, 1463, 0, 3181, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Descend(0, 0, 4, 284, (-1), 4, 1908, 1937, (-463), (-2009), 0, 0, 1908, 1002);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Descend(500, 289, 289, 0, 0, 33, (-1986), 0, 5734, 0, 0, 90, 5734, 3207);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Descend(278, 2, 940, 300, (-1037), 300, 1, 1, 1, (-2111), 640, 4, (-2009), 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Descend(0, 0, 0, 0, 1123, 0, 1123, 0, 0, 0, 0, 640, 0, 640);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try { 
        newV.Non_Crossing_Biased_Descend(2, 2509, (-3480), 1298, 2509, 1298, 2, 2509, 1, (-3480), 0, (-3303), 0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2509
         //
         verifyException("benchmarks.tcas.altseptest.Neq.newV", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = newV.Own_Below_Threat(287, 287, 287, 287, 287, 287, 287, 287, 287, 287, 287, 287, 287, 287);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = newV.Own_Below_Threat((-2422), 0, (-579), (-2422), (-224), (-224), (-579), 0, 2559, 0, 2559, 0, 0, (-2422));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Climb(1, 1, 1, 593, 593, 593, 1436, 593, 1490, 1, 1490, 1, 593, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Climb((-2277), 0, (-498), 0, 3, 2559, 0, 0, 1, 1964, 699, (-359), 1981, 1639);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        newV.Non_Crossing_Biased_Climb(640, 640, 0, 500, 640, 3638, 0, 0, 500, 640, 1375, 195, 1006, (-309));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 640
         //
         verifyException("benchmarks.tcas.altseptest.Neq.newV", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Climb((-2422), 0, 1981, (-2422), (-579), 2559, (-498), (-2422), 0, 0, 1639, (-579), (-2422), 1639);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Climb((-1267), 1, 2, 600, 1, 500, 3461, 0, 0, 500, (-1688), (-627), (-1299), (-129));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Climb(1, (-1688), (-129), (-1688), 1, (-1267), (-129), 1, (-1688), (-1267), 1, (-1688), (-129), (-1267));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Descend(0, 1, 0, (-145), 0, (-1190), 1, 1, 0, 0, 2104, 0, 2025, 2501);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Descend(287, 0, 3363, 287, 0, 287, 287, 3363, 287, 287, 287, 287, (-1846), (-311));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Climb((-1213), 0, 458, 640, 458, 400, (-673), (-673), (-1213), (-1213), (-673), (-673), 1, (-6435));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = newV.Non_Crossing_Biased_Climb(0, 0, 0, (-944), (-944), 2090, 0, 400, 0, 0, 0, (-1), 573, 640);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = newV.snippet(269, 0, 944, 4556, 0, 0, 1924, 944, 1071, 0, 3806, 1715, 4, 440);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = newV.snippet(21, 0, 21, 21, 1, 0, 0, 0, 0, 400, 1216, 1, 21, 21);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = newV.snippet((-129), 1, 0, (-125), 0, 0, 0, 0, 0, 0, 3150, 0, 0, 3150);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = newV.snippet((-1606), 0, (-1606), 0, 0, 0, 0, 587, 1231, 587, 1231, 0, 1231, 587);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = newV.snippet(1, 1, 0, 26, 1, (-145), (-350), 2545, 3850, (-2372), 0, 1, 1, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        newV.snippet(127, 1704, 127, (-1781), 1704, 127, (-1781), 127, 127, (-1781), 1509, 127, (-154), 1509);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1704
         //
         verifyException("benchmarks.tcas.altseptest.Neq.newV", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = newV.snippet(1, 0, 0, 0, 1, 600, 458, 0, 2159, 1355, (-1584), 600, 458, (-3491));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      newV newV0 = new newV();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      // Undeclared exception!
      try { 
        newV.ALIM((-3065), (-3065), (-300), (-3065), (-300), 1841, 0, 1841, (-3065), 1841, 0, (-716), 1841, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3065
         //
         verifyException("benchmarks.tcas.altseptest.Neq.newV", e);
      }
  }
}
