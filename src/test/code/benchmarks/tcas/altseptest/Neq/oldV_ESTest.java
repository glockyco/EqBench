/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 20:24:26 GMT 2024
 */

package benchmarks.tcas.altseptest.Neq;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import benchmarks.tcas.altseptest.Neq.oldV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class oldV_ESTest extends oldV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(1567, 0, (-40), 354, 1567, 354, (-40), 354, (-40), 0, (-40), (-40), 1567, 1567);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        oldV.Non_Crossing_Biased_Climb(0, (-3516), (-2828), 0, 1, (-3798), 2912, 0, (-84), (-3798), 1286, 1286, 2, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3516
         //
         verifyException("benchmarks.tcas.altseptest.Neq.oldV", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = oldV.snippet(1, (-650), 1, (-2288), (-650), (-511), 600, (-15), 1, 1, 600, 1, 4, (-2288));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = oldV.Inhibit_Biased_Climb(0, 0, 0, 327, 0, 0, 352, 0, 0, 352, 352, 1, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = oldV.ALIM(1567, 0, 1567, 1888, 0, 1888, 0, 1, 300, 1888, 3161, 0, 3161, 1888);
      assertEquals(400, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        oldV.snippet(1, 2337, 3, 0, 100, 0, 0, 0, 1, 0, 2652, (-427), 3, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2337
         //
         verifyException("benchmarks.tcas.altseptest.Neq.oldV", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        oldV.Non_Crossing_Biased_Descend(0, (-1691), (-2403), 0, 0, 0, 600, (-2403), (-681), (-3061), 139, 2, 0, (-1691));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1691
         //
         verifyException("benchmarks.tcas.altseptest.Neq.oldV", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        oldV.Non_Crossing_Biased_Climb((-2735), 1004, 1, (-828), 484, 1, (-1), 600, 484, 1, 260, (-2735), 610, 1273);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1004
         //
         verifyException("benchmarks.tcas.altseptest.Neq.oldV", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = oldV.Inhibit_Biased_Climb((-15), (-15), (-15), (-2288), (-2288), 1397, (-15), 1397, (-1046), (-15), (-15), 0, 4, (-2288));
      assertEquals((-2288), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = oldV.Inhibit_Biased_Climb(1, 1355, 1, 300, (-2735), (-509), (-1723), 1, 1355, (-4398), 740, (-1089), 400, 704);
      assertEquals(1004, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = oldV.Own_Above_Threat((-1), 266, 1062, (-23), (-393), 500, (-3366), 1840, (-393), 0, (-5108), 1840, 266, (-5108));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = oldV.Own_Above_Threat(1, 1, 0, 1, 1, 0, (-2403), 0, 0, (-2403), 600, 0, (-2403), (-1691));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend((-1432), 0, 0, 327, 500, (-273), 0, (-1), (-1595), (-2114), 327, (-1432), 1551, (-2114));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend((-1916), 0, 1888, 300, (-1205), 400, 0, 0, 1535, 0, 0, 1535, 1567, (-1916));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(0, 1, 640, 0, 0, 0, (-1), 0, (-512), 0, 300, 0, 0, 4);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(0, 3019, 0, 351, (-2524), 1537, 1, 0, 100, 1, 1509, 100, (-2480), 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = oldV.Own_Below_Threat((-1399), (-1399), 0, (-4876), 559, (-474), (-1729), 0, (-1), (-1399), 559, 3016, 0, (-4876));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = oldV.Own_Below_Threat((-2093), (-2093), (-2093), (-2093), 100, (-2093), 652, 0, (-84), 580, 100, 359, 359, (-84));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb(1, 0, (-2541), 0, 0, 638, 0, 3381, (-501), (-2541), 779, (-1), 1365, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb((-15), 0, 0, 0, (-1), (-876), (-15), (-2288), (-15), 0, (-1), 0, 0, (-168));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb(0, 0, 2497, 0, 0, 0, (-1), 0, 0, 0, 0, 0, (-696), 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb((-255), 1355, 484, 484, 2672, 1355, 1, 0, 1, 901, (-1089), (-1089), (-2735), 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(500, 0, 2880, 0, 0, 0, (-2189), 0, 3117, 0, 437, 0, 843, 3117);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(638, (-7450), 4064, 0, 779, 0, 3381, 0, (-4542), 0, 0, 0, (-4542), 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb(0, 0, (-1075), 0, 0, 0, 0, (-438), (-3318), 0, 1509, 0, 4122, 1955);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb(1, 1554, (-2572), (-671), 3478, (-671), 1027, 1027, 1, 1, 1, 1, 1554, (-671));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb(97, 0, 2263, 0, 0, (-274), 400, 1, (-1054), 2481, 400, (-3036), 578, 3229);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = oldV.snippet(1, (-15), 2426, 0, 0, (-1883), (-1), 3, 1, 3, 1315, 2838, 2426, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = oldV.snippet(500, (-3366), (-5108), (-2103), (-5108), 1, 500, (-2103), 1, 0, 1840, 1840, (-3366), (-2103));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = oldV.snippet(213, 2905, 213, 3826, 300, 500, (-1), 2036, 1, 600, 2596, 1, 400, 213);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = oldV.snippet((-1192), 1, 1, (-1192), 1, 1, (-1192), 0, 1, (-1192), 856, 1, (-1192), 856);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = oldV.snippet(1, 1, 1, 1554, 1, 1, 1, 1554, 1, 1554, 1, 1554, 1, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = oldV.snippet((-1253), 0, (-105), (-438), 0, (-1658), 0, (-1658), 1, 0, (-3318), 0, (-1), 4);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int int0 = oldV.snippet(0, 779, 3014, (-501), 0, (-640), 1, 3014, 779, 1461, 1365, (-623), 638, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      oldV oldV0 = new oldV();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        oldV.ALIM(123, 580, 740, 652, 0, 100, 580, 100, 0, 0, (-2093), 0, 740, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 580
         //
         verifyException("benchmarks.tcas.altseptest.Neq.oldV", e);
      }
  }
}
