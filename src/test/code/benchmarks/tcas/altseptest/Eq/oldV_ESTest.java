/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 20:22:08 GMT 2024
 */

package benchmarks.tcas.altseptest.Eq;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import benchmarks.tcas.altseptest.Eq.oldV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class oldV_ESTest extends oldV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = oldV.Own_Below_Threat((-2069), 478, 0, 0, 1, 0, 478, (-272), 0, 100, (-583), (-2747), 0, (-3106));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb(0, 0, (-2069), 0, 0, 0, (-2069), 0, (-2216), 0, (-2216), (-272), 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = oldV.snippet(300, 0, 1, 718, 600, 835, (-563), 1570, 1, 600, (-1431), 1788, 45, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = oldV.Inhibit_Biased_Climb(0, 0, (-1676), (-1676), 4568, 0, 4568, (-1676), 1, 0, 3453, 2155, 1008, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = oldV.Inhibit_Biased_Climb((-2383), 400, 539, 1, 1, 0, 1, 600, 400, 1014, 0, 539, (-1942), 1014);
      assertEquals(1014, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int int0 = oldV.ALIM(0, 0, 100, 0, 0, 47, 0, 0, 100, 0, 0, 1084, 100, (-2090));
      assertEquals(400, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        oldV.snippet((-869), 439, 2004, (-2157), 1520, (-2428), 270, (-2428), 1, (-869), 5900, 73, (-869), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 439
         //
         verifyException("benchmarks.tcas.altseptest.Eq.oldV", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        oldV.Non_Crossing_Biased_Descend(0, (-1), 1632, (-854), (-13), 3021, 2200, 640, 1467, 155, 1854, 0, (-13), 700);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("benchmarks.tcas.altseptest.Eq.oldV", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int int0 = oldV.Inhibit_Biased_Climb(1, 3359, 5891, 5891, 5891, (-1545), 0, 500, 3359, (-1545), 3359, (-2369), (-1545), (-339));
      assertEquals((-39), int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int int0 = oldV.Own_Above_Threat((-1), (-854), 1467, 155, (-3180), 0, 155, 1, (-13), 603, 0, 603, 494, 100);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int int0 = oldV.Own_Above_Threat(2004, (-790), (-846), 1178, (-2490), 2004, (-1), (-1168), 270, 73, 270, 2004, 1319, 1178);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(0, 0, (-1), 0, 1, 1, 2, 147, (-543), 0, 962, 1, 1, (-2310));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(1031, 0, 0, 0, 0, 0, 914, 914, (-2069), 0, 400, 2101, 0, (-3106));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend((-1), 0, 1423, 0, (-272), (-2069), (-2820), 374, 3759, (-1), 374, (-3106), (-3106), 374);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(0, 0, 0, 823, 823, 823, 0, 0, 3, 3, 823, (-882), (-882), 3);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(1467, 0, (-4610), (-340), (-4610), (-3180), 1467, 0, (-340), 2426, (-4610), 2426, 1632, 1632);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int int0 = oldV.Own_Below_Threat(300, (-86), (-322), (-465), (-86), 0, 0, (-2490), (-86), (-86), 0, 977, 270, 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb((-840), 0, 478, 817, 2101, 0, (-2010), 1573, 536, 600, 2400, (-1227), 3759, 536);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb(2704, 0, 0, 1, 1697, 0, (-442), 1839, (-831), 2101, 1295, 0, 0, (-9));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb(1, 1, 2, 1, 0, 1, 1, 0, 1, 600, 1, (-977), (-1), (-968));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      // Undeclared exception!
      try { 
        oldV.Non_Crossing_Biased_Climb((-245), (-245), (-1975), 2748, 0, 0, (-245), 5, 0, (-245), 2748, (-1995), 0, (-716));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -245
         //
         verifyException("benchmarks.tcas.altseptest.Eq.oldV", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb(1788, 0, 1788, 984, 376, 16, (-3795), (-1763), (-563), 1, 0, 1521, 376, 1570);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb((-340), (-3180), (-3180), 0, 2200, 2903, (-471), (-471), 2903, (-471), (-471), (-3907), 2200, 2426);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        oldV.ALIM((-3795), (-1431), 524, (-3312), 1521, 984, (-1), 400, 300, 1, 0, (-1683), (-393), 2016);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1431
         //
         verifyException("benchmarks.tcas.altseptest.Eq.oldV", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(0, 0, 1494, 0, 0, 1, 5235, 1494, 1295, 1295, 2528, 3, 1494, 4138);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Descend(977, (-869), 300, 270, 300, 0, 270, 270, 270, 977, (-2490), 916, (-869), 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = oldV.Non_Crossing_Biased_Climb((-4412), 0, 26, (-224), 2352, 90, 317, (-2076), (-1172), (-1907), 629, (-1172), 1379, 1697);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int int0 = oldV.snippet(3479, 3479, 3479, 1, 1265, (-638), (-3050), (-3050), 1, 0, 3479, (-86), 3479, 2088);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = oldV.snippet(1, 1, (-3795), 1570, 2016, 252, (-7), 252, 1, 1, 1570, 252, 2600, 513);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      int int0 = oldV.snippet(1, 0, 2016, 0, 1570, 1, 984, 0, 1, 0, 1181, 0, (-1425), 1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = oldV.snippet(1, (-1921), 1, (-1921), 301, 8, 301, 1, 1, 1, 1530, 1, 0, 8);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int int0 = oldV.snippet(8, 0, 1, (-4), 1, 0, 0, 0, 0, 1, 0, 2068, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int int0 = oldV.snippet(1, 1, 1, 1, 1, 1, 1, 1, 1, 622, (-2091), 1, 1, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      oldV oldV0 = new oldV();
  }
}
