/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 19:40:54 GMT 2024
 */

package benchmarks.gam.gammp.Neq;

import org.junit.Test;
import static org.junit.Assert.*;
import benchmarks.gam.gammp.Neq.newV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class newV_ESTest extends newV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = newV.gser((-2685.64409195218), 88.164, 0.0, 0.0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double double0 = newV.gser(Double.NaN, 2284.9520655346, 0.0, 4665.2247994);
      assertEquals(4665.2247994, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double double0 = newV.snippet(1597.89, 0.0, 0.0, Double.NEGATIVE_INFINITY, 6493.057635317208);
      assertEquals(2.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double double0 = newV.snippet(0.001208650973866179, 0.0, 0.001208650973866179, 2668.4019613510573, 0.0);
      assertEquals(2.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double double0 = newV.snippet(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY, 0.0, 0.0, 0.0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = newV.snippet(0.0, 2.0, 24.01409824083091, (-4.440892098500626E-16), (-616.907245));
      assertEquals((-10.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = newV.snippet((-2685.64409195218), 0.0, 0.0, 50.529847, 24.01409824083091);
      assertEquals((-10.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double double0 = newV.snippet(24.01409824083091, 4.7017804905557446E21, 0.0, 0.0, 2.5066282746310007);
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = newV.gser(1723.79937261, 1723.79937261, (-86.50532032941678), (-86.50532032941678));
      assertEquals((-86.50532032941678), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = newV.gcf((-1.0), 1863.542956737, 3274.254);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = newV.gcf((-10.0), 0.0, (-715.519261244875));
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = newV.gcf(24.01409824083091, 2.0, (-1728.750925));
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = newV.gammln(1.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = newV.gammln(1527.750317519);
      assertEquals(9670.283110663195, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = newV.gammln(1.000000000190015);
      assertEquals((-1.0968070895955861E-10), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = newV.gcf(2.0, (-1.0), (-35.33750218863925));
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double double0 = newV.gcf(2.0, 0.0, 2.0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double double0 = newV.gser((-1.0), 2.0, 0.0, Double.NaN);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double double0 = newV.gser(2.0, (-2469.2577269861326), (-583.323033), 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double double0 = newV.gser(2.0, 0.0, 2.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double double0 = newV.snippet(1.0, 1.0, 1.0, 1.0, 1.0);
      assertEquals(2.6321205588285577, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double double0 = newV.snippet((-1.0), (-35.33750218863925), Double.NaN, 2.0, Double.NaN);
      assertEquals((-10.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      newV newV0 = new newV();
  }
}
