/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 19:47:57 GMT 2024
 */

package benchmarks.gam.gammq.Eq;

import org.junit.Test;
import static org.junit.Assert.*;
import benchmarks.gam.gammq.Eq.newV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class newV_ESTest extends newV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = newV.gser(Double.NaN, Double.NaN, 101.19277563597397, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double double0 = newV.snippet(1.0, 1.0, 1.0, (-1.0), (-1.0));
      assertEquals(0.3678794411714422, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double double0 = newV.snippet(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY, 0.0, 0.0, (-1.0));
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double double0 = newV.snippet(0.0, 0.0, 0.0, 0.0, 0.0);
      assertEquals((-100000.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double double0 = newV.snippet(1.0, 512.567129267, Double.NaN, 512.567129267, 0.0);
      assertEquals(2.482699486161711E-223, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = newV.gser(0.0, 4370.2, 4370.2, (-1.0));
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = newV.gcf((-1419.0), 2.0847512748513414E137, (-2195.351431052));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double double0 = newV.gcf(4370.2, 79.14257761812027, 5.5);
      assertEquals(Double.NEGATIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = newV.gammln(1.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = newV.gammln(2.0);
      assertEquals((-4.440892098500626E-16), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = newV.gammln(2.0847512748513414E137);
      assertEquals(6.570902678285465E139, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = newV.gser(0.0, 6.570902678285465E139, 2.0847512748513414E137, 2.0);
      assertEquals(2.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = newV.gcf(2.0, (-1.0), 0.0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = newV.gcf(2.0, 0.0, 2.0);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = newV.gcf(1761.0981529674, 1761.0981529674, 3187.80332811101);
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = newV.gser(6.570902678285465E139, 2.0847512748513414E137, 2.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double double0 = newV.gser(2.0847512748513414E137, (-1.0), (-1.0), (-1.0));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double double0 = newV.gser(0.0, 0.0, Double.POSITIVE_INFINITY, 1761.0981529674);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double double0 = newV.snippet(2.0, 6.570902678285465E139, 6.570902678285465E139, 0.0, 2.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double double0 = newV.snippet((-3186.80332811101), Double.POSITIVE_INFINITY, (-3186.80332811101), Double.POSITIVE_INFINITY, 360.70078184168716);
      assertEquals((-100000.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double double0 = newV.snippet((-1.0), (-1.0), (-1.0), (-1.0), (-1.0));
      assertEquals((-100000.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double double0 = newV.snippet(Double.POSITIVE_INFINITY, 360.70078184168716, 3187.80332811101, 360.70078184168716, 0.0);
      assertEquals((-3186.80332811101), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      newV newV0 = new newV();
  }
}
