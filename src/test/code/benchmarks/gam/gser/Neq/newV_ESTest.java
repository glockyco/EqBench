/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 19:15:25 GMT 2024
 */

package benchmarks.gam.gser.Neq;

import org.junit.Test;
import static org.junit.Assert.*;
import benchmarks.gam.gser.Neq.newV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class newV_ESTest extends newV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      double double0 = newV.snippet(0.0, 2661.499504042762, 2661.499504042762);
      assertEquals(2671.499504042762, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      double double0 = newV.snippet(Double.NaN, 1.0, 531.02);
      assertEquals(541.02, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      double double0 = newV.snippet(0.0, 0.0, (-1148.6277788));
      assertEquals(20.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      double double0 = newV.snippet(9.999999999811537, 9.999999999811537, Double.NaN);
      assertEquals(564.670953212578, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      double double0 = newV.snippet((-162.8), Double.NaN, (-162.8));
      assertEquals((-152.8), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      double double0 = newV.gammln(0.0);
      assertEquals(Double.POSITIVE_INFINITY, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      double double0 = newV.gammln(1.000000000190015);
      assertEquals((-1.0968070895955861E-10), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      double double0 = newV.gammln(1.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      double double0 = newV.snippet((-4557.6220838092), (-4557.6220838092), (-4557.6220838092));
      assertEquals(20.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      newV newV0 = new newV();
  }
}
