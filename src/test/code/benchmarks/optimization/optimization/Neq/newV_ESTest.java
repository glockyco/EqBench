/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 12:38:45 GMT 2024
 */

package benchmarks.optimization.optimization.Neq;

import org.junit.Test;
import static org.junit.Assert.*;
import benchmarks.optimization.optimization.Neq.newV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class newV_ESTest extends newV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      newV.wood(1.0, 2.0, (-27.71911079), (-0.23336318535934772));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      newV.wood((-2.167712817842235E-5), 1713.3683, (-975.0), (-1366.654327545948));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      newV.wood(189.950183904, 0.0, (-975.0), (-27.71911079));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      double double0 = newV.theta((-1.0), 2213.58443320698);
      assertEquals((-0.7499281008079577), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      double double0 = newV.theta(189.950183904, (-1810.521908161336));
      assertEquals((-0.23336318535934772), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      double double0 = newV.theta(1.0, 1.0);
      assertEquals(0.125, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      double double0 = newV.theta(0.0, 1.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      double double0 = newV.theta((-883.9008871475297), (-883.9008871475297));
      assertEquals((-0.375), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      newV newV0 = new newV();
  }
}
