/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 13:48:04 GMT 2024
 */

package benchmarks.CLEVER.factorial.Neq;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import benchmarks.CLEVER.factorial.Neq.oldV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class oldV_ESTest extends oldV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      oldV oldV0 = new oldV();
      int int0 = oldV0.factorial(5);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      oldV oldV0 = new oldV();
      int int0 = oldV0.lib(5);
      assertEquals(120, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      oldV oldV0 = new oldV();
      int int0 = oldV0.lib(28);
      assertEquals((-1375731712), int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      oldV oldV0 = new oldV();
      int int0 = oldV0.factorial(1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      oldV oldV0 = new oldV();
      int int0 = oldV0.lib(0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      oldV oldV0 = new oldV();
      int int0 = oldV0.factorial(1004);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      oldV oldV0 = new oldV();
      oldV0.lib(1722);
      oldV0.lib(2026);
      oldV0.lib(1732);
      oldV0.lib(1144);
      oldV0.lib(2026);
      // Undeclared exception!
      oldV0.lib(1732);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      oldV oldV0 = new oldV();
      int int0 = oldV0.factorial((-47));
      assertEquals(0, int0);
  }
}
