/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 16:37:08 GMT 2024
 */

package benchmarks.ell.ell.Neq;

import org.junit.Test;
import static org.junit.Assert.*;
import benchmarks.ell.ell.Neq.newV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class newV_ESTest extends newV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = newV.SIGN(0.0, (-661.792742099));
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double double0 = newV.SIGN(4506.491303206675, 4506.491303206675);
      assertEquals(4506.491303206675, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double double0 = newV.SQR(1262.7410493303);
      assertEquals(1594514.9576637873, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double double0 = newV.MIN(1429.6626299959087, 1429.6626299959087);
      assertEquals(1429.6626299959087, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double double0 = newV.MAX(0.06818181818181818, 0.06818181818181818);
      assertEquals(0.06818181818181818, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = newV.MIN(1994.84608165208, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = newV.MIN((-435.4331855176056), (-435.4331855176056));
      assertEquals((-435.4331855176056), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double double0 = newV.MAX((-581.7592586), (-581.7592586));
      assertEquals((-581.7592586), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = newV.MAX((-1.0), 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = newV.SQR(0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = newV.snippet((-0.9557372607993478), (-0.9557372607993478));
      assertEquals(4.169255121219574, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = newV.SIGN((-0.9557372607993478), (-0.9557372607993478));
      assertEquals((-0.9557372607993478), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = newV.SIGN((-1097.8697932943), 0.0);
      assertEquals(1097.8697932943, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = newV.SIGN(0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = newV.SIGN(436.87746873645636, Double.NaN);
      assertEquals((-436.87746873645636), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = newV.snippet(436.87746873645636, 436.87746873645636);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      newV newV0 = new newV();
  }
}
