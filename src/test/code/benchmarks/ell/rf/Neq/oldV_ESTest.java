/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 16:40:23 GMT 2024
 */

package benchmarks.ell.rf.Neq;

import org.junit.Test;
import static org.junit.Assert.*;
import benchmarks.ell.rf.Neq.oldV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class oldV_ESTest extends oldV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = oldV.SIGN((-273.897133191), (-860.793053));
      assertEquals((-273.897133191), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double double0 = oldV.SIGN(0.0, (-423.549147514018));
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double double0 = oldV.SIGN(2585.3, 1.0);
      assertEquals(2585.3, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double double0 = oldV.snippet(377.062096718, 3.0E37, 377.062096718);
      assertEquals(1.0000000845981223, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double double0 = oldV.snippet(0.0, 1663413.249067764, 1.5E-38);
      assertEquals(1.0000002231928644, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = oldV.SQR(0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = oldV.SIGN(0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double double0 = oldV.MIN(0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = oldV.MIN(136.015071778165, 968.0);
      assertEquals(136.015071778165, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = oldV.MAX((-1.0), 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = oldV.MAX((-1541.1678318944166), (-933.0));
      assertEquals((-933.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = oldV.MIN(2090.120103402, (-1.0));
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = oldV.MAX((-1289.73379), 1.5E-38);
      assertEquals(1.5E-38, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = oldV.MAX(1.5E-38, 1.5E-38);
      assertEquals(1.5E-38, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = oldV.SIGN(0.0714285714, (-3581.7573459781183));
      assertEquals((-0.0714285714), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = oldV.SIGN((-175.97897254577128), 2436.5319825637266);
      assertEquals(175.97897254577128, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double double0 = oldV.snippet(9.000000000000001E74, 0.0, 9.000000000000001E74);
      assertEquals((-10000.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double double0 = oldV.snippet(0.0, 0.0, 0.0);
      assertEquals((-10000.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double double0 = oldV.snippet((-49.758836665993), 45.0, 9.000000000000001E74);
      assertEquals((-10000.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      oldV oldV0 = new oldV();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double double0 = oldV.SQR((-175.97897254577128));
      assertEquals(30968.598778265325, double0, 0.01);
  }
}
