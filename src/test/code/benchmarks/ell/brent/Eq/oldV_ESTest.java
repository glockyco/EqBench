/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 17:05:10 GMT 2024
 */

package benchmarks.ell.brent.Eq;

import org.junit.Test;
import static org.junit.Assert.*;
import benchmarks.ell.brent.Eq.oldV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class oldV_ESTest extends oldV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = oldV.SIGN((-2424.842022396), (-1.0));
      assertEquals((-2424.842022396), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double double0 = oldV.SIGN(0.0, (-457.83797654));
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double double0 = oldV.SQR(0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double double0 = oldV.MIN(1108.4379170905092, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double double0 = oldV.MIN(0.5, 0.5);
      assertEquals(0.5, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = oldV.MAX((-268.56930869233497), (-268.56930869233497));
      assertEquals((-268.56930869233497), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = oldV.SIGN(0.0, 875.814877);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double double0 = oldV.MIN((-888.5569276849675), (-1419.7742961714));
      assertEquals((-1419.7742961714), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = oldV.MIN((-2739.0268067005977), (-1.0));
      assertEquals((-2739.0268067005977), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = oldV.MAX(0.0, 1.0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = oldV.MAX(0.0, (-2739.0268067005977));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = oldV.SIGN((-976.755), 0.0);
      assertEquals(976.755, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = oldV.SIGN(1.0, (-0.9977518384284277));
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = oldV.snippet(0.0, 0.0, 833.2496241, (-532.27534651), 836.7346419638309);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = oldV.snippet((-2410.619055), 0.0, (-5055.895920387957), (-5055.895920387957), (-2410.619055));
      assertEquals((-0.940611128077865), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = oldV.snippet(0.0, 1.0, 0.0, 1.0, (-807.162830932199));
      assertEquals(0.8414709848078965, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double double0 = oldV.snippet((-2739.0268067005977), 0.0, (-1.0), 0.0, (-0.9977518384284277));
      assertEquals((-0.962838130124515), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double double0 = oldV.snippet(0.0, 0.0, (-1419.7742961714), (-1419.7742961714), (-888.5569276849675));
      assertEquals((-0.9977518384284277), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      oldV oldV0 = new oldV();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double double0 = oldV.SQR((-268.56930869233497));
      assertEquals(72129.47357147871, double0, 0.01);
  }
}
