/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 17:07:20 GMT 2024
 */

package benchmarks.ell.brent.Neq;

import org.junit.Test;
import static org.junit.Assert.*;
import benchmarks.ell.brent.Neq.oldV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class oldV_ESTest extends oldV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = oldV.SIGN(0.0, (-1576.8060683721872));
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double double0 = oldV.SIGN((-752.305), 1998.119791165);
      assertEquals(752.305, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double double0 = oldV.snippet((-0.00355), 0.0, 27.797227760116343, 27.797227760116343, 27.797227760116343);
      assertEquals((-0.0013559788844647329), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double double0 = oldV.snippet(0.0, (-1970.75593161), 0.0, (-1970.75593161), (-1970.75593161));
      assertEquals(0.8290115289704267, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      long long0 = oldV.helperdoubleToRawBits(0.0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      long long0 = oldV.helperdoubleToRawBits((-1.0));
      assertEquals((-4616189618054758400L), long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = oldV.SQR(0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double double0 = oldV.MIN(1.0E-17, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = oldV.MIN(2022.418, 2022.418);
      assertEquals(2022.418, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = oldV.MAX(0.0, (-382.433101647592));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = oldV.MAX((-1.0), (-1.0));
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = oldV.SIGN(0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = oldV.MIN(0.0, (-1.0));
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = oldV.MIN((-382.433101647592), 5774.503403);
      assertEquals((-382.433101647592), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = oldV.MAX((-660.461453), 1.0E-17);
      assertEquals(1.0E-17, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = oldV.SIGN((-2644.3728086), (-382.433101647592));
      assertEquals((-2644.3728086), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double double0 = oldV.SIGN(1522.112, (-115.9236689));
      assertEquals((-1522.112), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double double0 = oldV.snippet((-1.0), 0.0, (-115.9236689), (-2644.3728086), (-4223.53246408));
      assertEquals((-0.2922731960944359), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double double0 = oldV.snippet(0.0, (-516.2747599072056), (-942.8675813), 0.0, 4818.7518);
      assertEquals((-0.8691914112847511), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double double0 = oldV.snippet(0.0, 0.0, (-570.2455566024), (-0.10728794321556691), (-0.10728794321556691));
      assertEquals((-0.9985149833769138), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double double0 = oldV.snippet(0.0, 0.0, (-3047.507567), (-1.0), 0.0);
      assertEquals((-0.9964575108128952), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double double0 = oldV.snippet((-516.2747599072056), (-516.2747599072056), (-0.8691914112847511), 0.0, (-1.0));
      assertEquals((-0.8691914112847511), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double double0 = oldV.snippet(0.0, 0.0, 0.0, (-1.0), 3022.6608);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double double0 = oldV.SQR(3022.6608);
      assertEquals(9136478.31185664, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      oldV oldV0 = new oldV();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      long long0 = oldV.helperdoubleToRawBits(2822.0);
      assertEquals(4658424058700890112L, long0);
  }
}
