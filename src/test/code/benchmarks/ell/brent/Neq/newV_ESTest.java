/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 17:08:25 GMT 2024
 */

package benchmarks.ell.brent.Neq;

import org.junit.Test;
import static org.junit.Assert.*;
import benchmarks.ell.brent.Neq.newV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class newV_ESTest extends newV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = newV.MIN(0.0, 1.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double double0 = newV.snippet((-986482.3944988296), 4515.220755226, 4515.220755226, 4515.220755226, (-986482.3944988296));
      assertEquals((-0.7302476050852784), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double double0 = newV.snippet(0.0, 0.0, 0.0, 0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double double0 = newV.snippet(0.0, (-447.048894604168), (-625.879), 3079.15, 0.0);
      assertEquals(0.587574889352023, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      long long0 = newV.helperdoubleToRawBits(0.0);
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      long long0 = newV.helperdoubleToRawBits((-1.0));
      assertEquals((-4616189618054758400L), long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = newV.SQR(0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double double0 = newV.MIN(0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = newV.MIN(4661686552423439383L, 4515.220755226);
      assertEquals(4515.220755226, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = newV.MAX(0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = newV.MAX((-318.5858), (-393.1));
      assertEquals((-318.5858), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = newV.SIGN((-1526.1623), (-4616189618054758400L));
      assertEquals((-1526.1623), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = newV.SIGN(0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = newV.SIGN(0.0, (-429.0));
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = newV.MIN(0.0, (-4822.83160907272));
      assertEquals((-4822.83160907272), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = newV.MAX(4515.220755226, 4661686552423439383L);
      assertEquals(4.6616865524234394E18, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double double0 = newV.SIGN((-4822.83160907272), 0.0);
      assertEquals(4822.83160907272, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double double0 = newV.snippet(0L, 0.0, 0L, 1656.26, 0L);
      assertEquals((-1.65626E-14), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double double0 = newV.snippet(Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY, 5.649929828480815E176, (-3273.6388581102424), 5.649929828480815E176);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double double0 = newV.snippet(0.0, 120.587542, 2.0, 2.0, 120.587542);
      assertEquals((-0.9345602649865504), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double double0 = newV.snippet(Double.POSITIVE_INFINITY, (-2.2856845907388078E185), Double.POSITIVE_INFINITY, (-2.2856845907388078E185), (-2.2856845907388078E185));
      assertEquals((-0.7725500645295761), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double double0 = newV.SQR((-4616779046787201991L));
      assertEquals(2.1314648766853346E37, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      newV newV0 = new newV();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      long long0 = newV.helperdoubleToRawBits(4515.220755226);
      assertEquals(4661686552423439383L, long0);
  }
}
