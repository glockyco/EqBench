/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 16:55:24 GMT 2024
 */

package benchmarks.ell.dbrent.Neq;

import org.junit.Test;
import static org.junit.Assert.*;
import benchmarks.ell.dbrent.Neq.newV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class newV_ESTest extends newV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = newV.SIGN(0.0, (-2523.808259040782));
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double double0 = newV.SQR(0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double double0 = newV.MIN(0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double double0 = newV.MIN(1.0, 1.0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double double0 = newV.MAX(0.0, (-3122.358534848));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = newV.MAX((-1918.55511), (-1918.55511));
      assertEquals((-1918.55511), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = newV.SIGN((-975.3207872325086), (-975.3207872325086));
      assertEquals((-975.3207872325086), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double double0 = newV.SIGN((-963.095), 963.095);
      assertEquals(963.095, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = newV.SIGN(963.095, (-2154.68));
      assertEquals((-963.095), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = newV.SIGN(0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = newV.MIN((-539.5870390245), (-2364.0));
      assertEquals((-2364.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = newV.MIN((-1.0), 1.0);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = newV.MAX(0.8414709848078965, 1.0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = newV.snippet((-1.0159861129197529E10), (-3710.3), (-2364.9988254710183), 0.9237716032749576, (-2364.9988254710183));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = newV.snippet((-1.0086277567712485E11), 3.391015387889364, (-0.9574891617013241), 1545679.1305343113, 1027.266247);
      assertEquals((-0.2468445981559006), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = newV.snippet(1.2544E-4, (-463.5), (-463.5), 1.2544E-4, 1.2544E-4);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double double0 = newV.snippet((-2364.9988254710183), (-2364.0), (-539.5870390245), 0.0, (-2364.0));
      assertEquals((-2364.9988254710183), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double double0 = newV.snippet(1.0, 1.58120267656338912E17, 1473.0, (-0.12842622729957875), 608.89428326);
      assertEquals(1.37813478221635696E17, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double double0 = newV.snippet(2008.5, (-2152.25643063922), (-1.0), (-1.0), (-3182.3));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double double0 = newV.snippet((-3485.090457605), (-211.364565664), 0.5, 1.0, (-3485.090457605));
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double double0 = newV.snippet(987.1, 371.3141726882156, (-885.95995747693), 0.7825500401832821, 2.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double double0 = newV.snippet(9418761.0, 3069.0, 953.9477683, 1.0, 1.0);
      assertEquals(0.7825500401832821, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      double double0 = newV.snippet(4505.18090013241, 830.445656542217, 4505.18090013241, (-0.4258758248712656), 0.0);
      assertEquals(1183.14809498437, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double double0 = newV.SQR(830.445656542217);
      assertEquals(689639.9884698337, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      newV newV0 = new newV();
  }
}
