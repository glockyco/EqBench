/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 16:52:00 GMT 2024
 */

package benchmarks.ell.dbrent.Eq;

import org.junit.Test;
import static org.junit.Assert.*;
import benchmarks.ell.dbrent.Eq.oldV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class oldV_ESTest extends oldV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = oldV.MAX(0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double double0 = oldV.SIGN(0.0, 2043.598669268848);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double double0 = oldV.SQR(0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double double0 = oldV.SIGN(0.0, (-1.0));
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double double0 = oldV.MIN(2.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = oldV.MIN(3646.7705048904, 3646.7705048904);
      assertEquals(3646.7705048904, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = oldV.MAX((-1.0), (-1361.5));
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double double0 = oldV.SIGN(1.0, 1.0);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = oldV.SIGN((-1.0), (-1.0));
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = oldV.SIGN(1481.62126265, (-1.0));
      assertEquals((-1481.62126265), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = oldV.MIN(0.0, (-1499.3813437));
      assertEquals((-1499.3813437), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = oldV.MIN((-1499.3813437), (-0.5));
      assertEquals((-1499.3813437), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = oldV.MAX((-1396.21377123), 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = oldV.MAX(0.5, (-0.5269186321689768));
      assertEquals(0.5, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = oldV.SIGN((-5035.6905851412), 0.0);
      assertEquals(5035.6905851412, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = oldV.snippet(1.0, (-118.973913474), (-1447.0), (-1196.496276079968), 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double double0 = oldV.snippet(0.0, 0.0, (-0.9896736101986346), 0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double double0 = oldV.snippet(393.4234035, 2248144.4138356172, (-1447.0), 0.0, 0.5);
      assertEquals((-0.5314784087002139), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double double0 = oldV.snippet((-71.27775923689208), 1.0, 0.5, 0.5, (-3562.00966238267));
      assertEquals((-0.8357163284631035), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double double0 = oldV.snippet(1748.0, (-1499.3813437), 0.5, (-0.5269186321689768), 100.09);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double double0 = oldV.snippet(2.2737367544323206E-13, 0.8559642161448413, 1.0, 0.8559642161448413, (-717.115927));
      assertEquals(0.7552033017510936, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double double0 = oldV.snippet(0.0, 0.0, 356.740864979, 0.2828005261135417, 356.740864979);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      oldV oldV0 = new oldV();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      double double0 = oldV.SQR(400.18796010263844);
      assertEquals(160150.40341111095, double0, 0.01);
  }
}
