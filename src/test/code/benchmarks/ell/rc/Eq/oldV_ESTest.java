/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 17:14:23 GMT 2024
 */

package benchmarks.ell.rc.Eq;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import benchmarks.ell.rc.Eq.oldV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class oldV_ESTest extends oldV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = oldV.SIGN(0.0, (-324.9712066569526));
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double double0 = oldV.SIGN(2640.0411, 499.75145010787);
      assertEquals(2640.0411, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double double0 = oldV.SIGN(0.0, 1.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      // Undeclared exception!
      oldV.snippet(1.0, 1.0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double double0 = oldV.SQR(0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = oldV.MIN((-1301.954793941626), 0.0);
      assertEquals((-1301.954793941626), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = oldV.MAX((-1.0), 768.676189);
      assertEquals(768.676189, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double double0 = oldV.MAX((-1436.0940781), (-2030.96255659452));
      assertEquals((-1436.0940781), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = oldV.MIN(1.0, 0.375);
      assertEquals(0.375, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = oldV.MIN(0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = oldV.MAX((-1436.0940781), 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = oldV.MAX(0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = oldV.SIGN(0.32, (-1.0));
      assertEquals((-0.32), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = oldV.SIGN((-552.951832472411), 0.0);
      assertEquals(552.951832472411, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = oldV.SIGN(Double.NaN, Double.NaN);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = oldV.snippet(0.0, 1.69E-38);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      oldV.snippet(3.0E37, (-10000.0));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double double0 = oldV.snippet(1436.0940781, 0.0);
      assertEquals((-10000.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double double0 = oldV.snippet((-1407.242098581), 0.0);
      assertEquals((-10000.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      oldV oldV0 = new oldV();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      double double0 = oldV.SQR((-10000.0));
      assertEquals(1.0E8, double0, 0.01);
  }
}
