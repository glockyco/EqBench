/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 17:22:28 GMT 2024
 */

package benchmarks.ell.rj.Neq;

import org.junit.Test;
import static org.junit.Assert.*;
import benchmarks.ell.rj.Neq.oldV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false, useJEE = true)
public class oldV_ESTest extends oldV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      double double0 = oldV.SIGN(0.0, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      double double0 = oldV.SIGN((-1998.0), 0.0);
      assertEquals(1998.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double double0 = oldV.SQR(0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double double0 = oldV.SIGN(0.0, (-2568.8314));
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double double0 = oldV.MIN(2270.39275839007, 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = oldV.MIN(411.673389259032, 411.673389259032);
      assertEquals(411.673389259032, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double double0 = oldV.MAX((-3681.939583), (-3681.939583));
      assertEquals((-3681.939583), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      double double0 = oldV.MIN((-265.907639), 0.0);
      assertEquals((-265.907639), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = oldV.MAX(711.107409698873, 711.107409698873);
      assertEquals(711.107409698873, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      double double0 = oldV.MAX((-123.4090945410568), 0.0);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      double double0 = oldV.snippet(2.5E-13, 3.582634530766388E9, 1.3E-19, (-1628.329208773559));
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      double double0 = oldV.snippet(3481.1, 194.15824919094254, 0.0, (-1538.9));
      assertEquals((-5.879759400959454E-5), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = oldV.SIGN(4410685.177119214, (-255.59364));
      assertEquals((-4410685.177119214), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      double double0 = oldV.SIGN(4410685.177119214, 2100.1631310732064);
      assertEquals(4410685.177119214, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = oldV.SIGN((-1868.95524), (-1868.95524));
      assertEquals((-1868.95524), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      double double0 = oldV.snippet(1236.65546369, 1236.65546369, 1236.65546369, 385.5102113269091);
      assertEquals(4.316534416813347E-5, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double double0 = oldV.snippet(711.107409698873, 1.72E19, 2936.564386, (-1995.62));
      assertEquals((-1000.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double double0 = oldV.snippet(0.0, 2.5E-13, 1.2100875088361055E7, (-1538.9));
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      double double0 = oldV.snippet(0.0, 0.0, 0.0, 0.0);
      assertEquals((-1000.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      double double0 = oldV.snippet(0.0, 3.582634530766388E9, (-1.0), 0.0);
      assertEquals((-1000.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      oldV oldV0 = new oldV();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      double double0 = oldV.SQR(2100.1631310732064);
      assertEquals(4410685.177119214, double0, 0.01);
  }
}
