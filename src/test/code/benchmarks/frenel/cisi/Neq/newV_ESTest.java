/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 20:46:34 GMT 2024
 */

package benchmarks.frenel.cisi.Neq;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import benchmarks.frenel.cisi.Neq.newV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class newV_ESTest extends newV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      newV.complex newV_complex0 = new newV.complex();
      newV_complex0.assign(241.6);
      newV_complex0.divide(newV_complex0);
      assertEquals(241.6, newV_complex0.getreal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      newV.complex newV_complex0 = new newV.complex();
      newV_complex0.assign(241.6);
      newV_complex0.multiply(newV_complex0);
      assertEquals(241.6, newV_complex0.getreal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      newV.complex newV_complex0 = new newV.complex((-1.0), (-1.0));
      newV_complex0.assign((-1.0));
      newV_complex0.minus(newV_complex0);
      assertEquals((-1.0), newV_complex0.getreal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      newV.complex newV_complex0 = new newV.complex((-3346.64224143256), 0.0);
      newV.complex newV_complex1 = new newV.complex((-2051.9824864), (-865.1247338));
      newV.complex newV_complex2 = newV_complex0.minus(newV_complex1);
      assertNotSame(newV_complex2, newV_complex0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      newV.complex newV_complex0 = new newV.complex();
      newV.complex newV_complex1 = new newV.complex();
      newV_complex0.assign(newV_complex1);
      assertEquals(0.0, newV_complex0.getimag(), 0.01);
      assertEquals(0.0, newV_complex0.getreal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      newV.frenel(1.5);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      newV.frenel(4.9E-324);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      newV.frenel((-1.0));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      newV.complex newV_complex0 = new newV.complex((-1650.7942126222974), (-1650.7942126222974));
      newV.complex newV_complex1 = newV_complex0.plus(newV_complex0);
      assertEquals(0.0, newV_complex1.getreal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      newV.complex newV_complex0 = new newV.complex((-1650.7942126222974), (-1650.7942126222974));
      double double0 = newV_complex0.getimag();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      newV.complex newV_complex0 = new newV.complex((-1650.7942126222974), (-1650.7942126222974));
      newV.complex newV_complex1 = newV_complex0.multiply(newV_complex0);
      assertEquals(0.0, newV_complex1.getreal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      newV.complex newV_complex0 = new newV.complex((-1650.7942126222974), (-1650.7942126222974));
      double double0 = newV_complex0.getreal();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      newV.frenel(0.0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        newV.frenel(2382.95373364);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("benchmarks.frenel.cisi.Neq.newV", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      newV.snippet((-2.0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      newV.snippet(2.0E-323);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      newV.snippet(0.0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      newV.complex newV_complex0 = new newV.complex((-2720.4190643), (-2720.4190643));
      newV_complex0.assign(2236.183844170821);
      newV_complex0.plus(newV_complex0);
      assertEquals(2236.183844170821, newV_complex0.getreal(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      newV.complex newV_complex0 = new newV.complex();
      newV_complex0.divide(newV_complex0);
      assertEquals(0.0, newV_complex0.getreal(), 0.01);
      assertEquals(0.0, newV_complex0.getimag(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      newV.snippet((-43.2539));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      newV newV0 = new newV();
  }
}
