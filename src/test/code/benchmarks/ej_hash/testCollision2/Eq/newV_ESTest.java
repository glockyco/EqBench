/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 06 11:55:02 GMT 2024
 */

package benchmarks.ej_hash.testCollision2.Eq;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import benchmarks.ej_hash.testCollision2.Eq.newV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class newV_ESTest extends newV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      newV.testCollision2(32, 1, (-3294L), 0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      newV newV0 = new newV(179, 179, 179);
      // Undeclared exception!
      try { 
        newV.checkCond(newV0, (newV) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("benchmarks.ej_hash.testCollision2.Eq.newV", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      newV newV0 = new newV(32, 32, 32);
      boolean boolean0 = newV.checkCond(newV0, newV0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      newV newV0 = new newV(32, 32, 32);
      newV newV1 = new newV(1, 32, 32);
      boolean boolean0 = newV.checkCond(newV1, newV0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      newV newV0 = new newV(32, 32, 32);
      newV0.hashCode();
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      newV.testCollision2(32, 1, 1, 1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      newV.testCollision2(0L, 0, 1L, (-1852));
  }
}
